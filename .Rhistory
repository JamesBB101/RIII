source("http://wush978.github.io/R/init-swirl.R")
DataScienceAndR
library(swirl)
swirl()
chol2inv
'?chol2inv'
`?chol2inv`
'?chol2inv'
?chol2inv
a<-1
a+1
a=2
source()
source
help("source")
help(source)
library(swirl)
swirl())
swirl()
library(swirl)
swirl()
help(package="base")
??sum
data()
data(iris)
class(iris)
str(iris)
class(iris)
(2,T,3+0i)
c(2,T,3+0i)
x = c(1,2,3,4,NA)
sum(x[!is.na(x)])
is.na(x)
x = c(1,2,3,4,NA)
sum(y[!is.na(x)])
x[!is.na(x)]
height_vec = c(180,169,173)
height_vec
names(height_vec) = c("Brian", "Toby", "Sherry")
height_vec
weight_vec = c(73,87,43)
names(weigth_vec) = c("Brian", "Toby", "Sherry")
names(weight_vec) = c("Brian", "Toby", "Sherry")
weight_vec
weight_vec[c(1)]
weight_vec+height_vec
BMI_vec = weight_vec/(height_vec*height_vec/10000)
BMI_vec
BMI_vec[BMI_vec<18.5 | BMI_vec>24]
#使用範例資料
data(anscombe)
#使用資料中x1,y1變數畫出點散布圖
plot(y1 ~ x1, data = anscombe)
#建立回歸模型並assign到lmfit變數中
lmfit <- lm(y1~x1, data=anscombe)
#在點散佈圖上加上迴歸線
abline(lmfit, col="red")
#使用範例資料
data(anscombe)
#使用資料中x1,y1變數畫出點散布圖
plot(y1 ~ x1, data = anscombe)
#建立回歸模型並assign到lmfit變數中
lmfit <- lm(y1~x1, data=anscombe)
#在點散佈圖上加上迴歸線
abline(lmfit, col="red")
abline(lmfit, col="red")
BMI_vec<18.5 | BMI_vec>24
length(paste(c("big","bang"),1:4,collapse = "+" ))
paste(c("big","bang"),1:4)
length(paste(c("big","bang"),1:4,collapse = "+" ))
paste(c("big","bang"),1:4)
paste(c("big","bang"),1:4,collapse = "+" )
paste("big","bang",sep="")
len(paste(c("big","bang"),1:4))
length(paste(c("big","bang"),1:4))
?rep
abline(lmfit, col="red")
library("ggplot2", lib.loc="C:/R/R-3.3.3/library")
abline(lmfit, col="red")
#使用範例資料
data(anscombe)
#使用資料中x1,y1變數畫出點散布圖
plot(y1 ~ x1, data = anscombe)
#建立回歸模型並assign到lmfit變數中
lmfit <- lm(y1~x1, data=anscombe)
#在點散佈圖上加上迴歸線
abline(lmfit, col="red")
```{r RDemo, echo=TRUE}
data(anscombe)
#使用資料中x1,y1變數畫出點散布圖
plot(y1 ~ x1, data = anscombe)
#建立回歸模型並assign到lmfit變數中
lmfit <- lm(y1~x1, data=anscombe)
#在點散佈圖上加上迴歸線
abline(lmfit, col="red")
data(anscombe)
#使用資料中x1,y1變數畫出點散布圖
plot(y1 ~ x1, data = anscombe)
#建立回歸模型並assign到lmfit變數中
lmfit <- lm(y1~x1, data=anscombe)
#在點散佈圖上加上迴歸線
abline(lmfit, col="red")
plot(y1 ~ x1, data = anscombe)
abline(lmfit, col="red")
class(anscombe)
class(plot)
class(lmfit)
str(lmfit)
?plot
class(plot)
??plot
?plot
?plot
matrix(1:9, byrow=TRUE, nrow=3)
matrix(1:9, nrow=3)
kevin = c(85,73)
jerry = c(59,66)
marry = c(72,64)
mat = matrix(c(kevin, marry, jerry), nrow=3, byrow= TRUE)
colnames(mat) = c('first', 'second')
rownames(mat) = c('kevin', 'marry', 'jerry')
mat
dim(mat)
t(mat) #transpose
mat[1,]
mat[,1]
mat[1:2,]
mat[c('kevin','jerry'),]
mat[c('kevin','jerry'),]
mat[2,]
mat[c('kevin','jerry'),'first']     #mat[1:2,1]
mat[1:2,1]
rowSums(mat)
colSums(mat)
rowMeans(mat)
colMeans(mat)
mat2 = rbind(mat, c(78,63))    #in row bind
mat2
rownames(mat2)[nrow(mat2)] = 'sam'
mat2
mat3 = cbind(mat2,c(82,77,70,64))
mat3
ncol(mat3)
colnames(mat3)[ncol(mat3)] = 'third'  #ncol(mat3)=3
mat3
rowMeans(mat3)
colMeans(mat3)
m1 = matrix(1:4, byrow=TRUE, nrow=2)
m2 = matrix(5:8, byrow=TRUE, nrow=2)
m1 + m2
m1 - m2
m1 * m2
m1 / m2
m1 %*% m2   #矩陣乘積
mat = matrix(c(kevin, marry, jerry), nrow=3, byrow= TRUE)
mat
kevin = c(85,73)
marry = c(72,64)
jerry = c(59,66)
mat = matrix(c(kevin, marry, jerry), nrow=3, byrow= TRUE)
colnames(mat) = c('first', 'second')          #names
rownames(mat) = c('kevin', 'marry', 'jerry')
mat
mat2 = matrix(c(0.6,0.4))
mat2
mat %*% mat2
mat2 = matrix(c(0.4,0.6))
mat %*% mat2
class(data)
class(anscombe)
?plot
class(lm)
plot(y1 ~ x1, data = anscombe)
lm(y1~x1, data=anscombe)
class(abline)
abline(lmfit, col="red")
?abline
x=1:5
sum(x)
mean(x)
var(x)
sqrt(var(x))
weather= c("sunny","rainy", "cloudy", "rainy", "cloudy")
class(weather)
weather_category = factor(weather)
weather_category
weather= c("s","r", "c", "r", "c")
weather_factor = factor(weather)
levels(weather_factor) = c("cloudy","rainy","sunny")
weather_factor
weather= c("s","r", "c", "r", "c")
weather_factor = factor(weather)
weather_factor
levels(weather_factor) = c("cloudy","rainy","sunny")
weather_factor
weather= c("sunny","rainy", "cloudy", "rainy", "cloudy")
weather_category = factor(weather)
weather_category
weather_factor           #用levels()替換factor 元素
weather= c("s","r", "c", "r", "c")
weather_factor = factor(weather)
levels(weather_factor) = c("cloudy","rainy","sunny")
weather_factor
name <- c("Joe", "Bob", "Vicky")
age <- c(28, 26, 34)
gender <- c("Male","Male","Female")
df <- data.frame(name, age, gender)
class(df)
str(df)
df
data(iris)
head(iris)
head(iris,10)
head(iris)
data(iris)
str(iris)
iris[1:3,]
iris[1:3,1]
iris[1:3,"Sepal.Length"]
head(iris[,1:2])
iris$"Sepal.Length"
iris$"Sepal.Length"
iris[1:3,"Sepal.Length"]
iris[1:3,1]
iris[1:3,"Sepal.Length"]
iris[1:3,]
head(iris)    #預設前6筆
tail(iris)    #後6筆
tail(iris, 10)
iris[1:3,]
iris[1:3,1]
iris[1:3,"Sepal.Length"]
head(iris[,1:2])
iris$"Sepal.Length"
iris[order(iris$Sepal.Length, decreasing = TRUE),]
iris[order(iris$Sepal.Length, decreasing = TRUE),]
iris$Species_new <- ifelse(iris$Species %in% c("setosa"), "IsSetosa","Notsetosa")
data(2330.csv)
getwd()
setwd("C:/Users/BigData/Desktop")
tw2330 = read.csv("2330.csv", header=TRUE)
getwd()
tw2330 = read.csv("2330.csv", header=TRUE)
tw2330 = read.csv("data/2330.csv", header=TRUE)
test.data = read.table("data/match.txt" ,header = TRUE, sep="|")
write.table(test.data, file = "data/test.txt" , sep = " ")
write.csv(test.data, file = "data/test.csv")
data(2330.csv)
read.csv(2330.csv)
tw2330 = read.csv("data/2330.csv", header=TRUE)
tw2330
str(tw2330)
tw2330
str(tw2330)
tw2330[as.Date(tw2330$Date),'2015-0.-01':'2015-08-31']
2330.Date = tw2330[as.Date(tw2330$Date),]
2330date = tw2330[as.Date(tw2330$Date)]
tw2330[as.Date(tw2330$Date)]
as.Date(tw2330$Date)
2330date = as.Date(tw2330$Date)
2330=as.Date(tw2330$Date)
2330 <- as.Date(tw2330$Date)
2330_ <- as.Date(tw2330$Date)
as.Date(tw2330$Date)
class(as.Date(tw2330$Date))
tw2330[tw2330$Date, order = T, as.Date(tw2330$Date)]
tw2330[tw2330$Date, order = TRUE, as.Date(tw2330$Date)]
tw2330[tw2330$Date, order = TRUE, levels = as.Date(tw2330$Date)]
tw2330[tw2330$Date = Date, order = TRUE, levels = as.Date(tw2330$Date)]
tw2330[tw2330$Date = "Date", order = TRUE, levels = as.Date(tw2330$Date)]
tw2330$Date
tw2330[tw2330$Date , order = TRUE, levels = as.Date(tw2330$Date)]
setosa.data = iris[iris$Species=="setosa",1:5]
setosa.data
tw2330[as.Date(tw2330$Date) > '2015-08-31']
tw2330[as.Date(tw2330$Date) < '2015-08-31']
tw2330[as.Date(tw2330$Date) > '2015-03']
tw2330[as.Date(tw2330$Date) > '2015-03-01']
tw2330[as.Date(tw2330$Date) > '2015-08-31']
tw2330[as.Date(tw2330$Date) > '2015-08-31',1:5]
tw2330[as.Date(tw2330$Date) > '2015-03-01'& as.Date(tw2330$Date) < '2015-08-31',1:5]
tw2330[as.Date(tw2330$Date) > '2015-03-01'& as.Date(tw2330$Date) < '2015-08-31', decreasing = TRUE, 1:5]
tw2330[as.Date(tw2330$Date) > '2015-03-01'& as.Date(tw2330$Date) < '2015-08-31', decreasing = TRUE]
tw2330_date=as.Date(tw2330$Date) > '2015-03-01'& as.Date(tw2330$Date) < '2015-08-31'
tw2330[order(tw2330_date), decreasing = TRUE , 1:5]
tw2330[order(tw2330_date.Length, decreasing = TRUE) , 1:5]
tw2330[order(tw2330_date, decreasing = TRUE) , 1:5]
tw2330_date[order(tw2330$High, decreasing = TRUE) , 1:5]
tw2330_date[order(tw2330$High, decreasing = TRUE) ]
tw2330_date[order(tw2330$High, decreasing = TRUE), ]
tw2330_date[order(tw2330$High, decreasing = TRUE),]
tw2330_date[order(tw2330_date$High, decreasing = TRUE),]
tw2330_date[order(tw2330_date$High, decreasing = TRUE)]
class(tw2330_date)
te2330_date
tw2330_date
tw2330_date=as.Date(tw2330$Date) > '2015-03-01'& as.Date(tw2330$Date) < '2015-08-31'
class(tw2330_date)
tw2330_date=as.Date(tw2330$Date) > '2015-03-01'& as.Date(tw2330$Date) < '2015-08-31'
tw2330_date
as.Date(tw2330$Date) > '2015-03-01'& as.Date(tw2330$Date) < '2015-08-31'
tw2330[tw2330_date]
tw2330$Date = as.Date(tw2330$Date)
str(tw2330)
max(tw2330$Close)
summary(stock2$close)
stock2 = tw2330[(tw2330$Date >= '2014-03-01' & tw2330$Date <'2014-08-31'),]
summary(stock2$close)
max(stock2$Close)
summary(stock2$Close)
class(stock2)
getwd()
tw2330 = read.csv("data/2330.csv", header=TRUE)
getwd()
tw2330 = read.csv("data/2330.csv", header=TRUE)
getwd()
tw2330 = read.csv("data/2330.csv", header=TRUE)
str(tw2330)
max(tw2330$Close)
summary(stock2$Close)   #取摘要
Five.Sepal.iris = iris[1:5, c("Sepal.Length","Sepal.Width")]
setosa.data = iris[iris$Species=="setosa",1:5]
str(setosa.data)
View(iris)
m1
iris
iris[iris$Species=="setosa",1:5]
setosa.data = iris[iris$Species=="setosa",1:5]
order_stock2 = stock2[order(stock2$close, decreasing = T)]
getwd()
tw2330 = read.csv("data/2330.csv", header=TRUE)
setwd("C:/riii")
tw2330 = read.csv("data/2330.csv", header=TRUE)
tw2330$Date = as.Date(tw2330$Date)   #先將Date的type轉成Date
str(tw2330)
max(tw2330$Close)
stock2 = tw2330[(tw2330$Date >= '2014-03-01' & tw2330$Date <'2014-08-31'),]  #new data.frame
summary(stock2$Close)   #取摘要
order_stock2 = stock2[order(stock2$close, decreasing = T)]
order_stock2 = stock2[order(stock2$close, decreasing = T),]
order_stock2 = stock2[order(stock2$close, decreasing = T),]
ordered_stock2 = stock2[order(stock2$close, decreasing = T),]
stock2$Close
stock2$Close
ordered_stock2 = stock2[order(stock2$close, decreasing = T),]
ordered_stock2 = stock2[order(stock2$Close, decreasing = T),]
ordered_stock2 = stock2[order(stock2$Close, decreasing = T)]
ordered_stock2 = stock2[order(stock2$Close, decreasing = T),]
class(ordered_stock2)
ordered_stock2
ordered_stock2[1,]
ordered_stock2[nrow(ordered_stock2),]
nrow(ordered_stock2)
ordered_stock2[1,"close"]
ordered_stock2[1,"Close"]
ordered_stock2[nrow(ordered_stock2),"Close"]
data(iris)   #iris資料集
head(iris)    #預設前6筆
tail(iris)    #後6筆
tail(iris)
iris[1:3,"Sepal.Length"]
head(iris[,1:2])
iris[1:3,]
head(iris[,1:2])
iris$"Sepal.Length"
class(iris$"Sepal.Length")
str(iris)
Five.Sepal.iris = iris[1:5, c("Sepal.Length","Sepal.Width")]
View(Five.Sepal.iris)
setosa.data = iris[iris$Species=="setosa",1:5]
setosa.data
str(setosa.data)
flower.type = data.frame(Species = "setosa", Flower = "iris")
flower.type
flower.type
iris[1:3,]
merge(flower.type, iris[1:3,], by ="Species")
merge(flower.type, iris[1:3,], by ="Species")
df1 = data.frame(CustomerId = c(1:6), Product = c(rep("Toaster", 3), rep("Radio", 3)))
df2 = data.frame(CustomerId = c(2, 4, 6), State = c(rep("Alabama", 2), rep("Ohio", 1)))
df1
df2
merge(x = df1, y= df2, by="CustomerId")
merge(x = df1, y = df2, by = "CustomerId", all = TRUE)
merge(x = df1, y = df2, by = "CustomerId", all.x = TRUE)
merge(x = df1, y = df2, by = "CustomerId", all.y = TRUE)
merge(x = df1, y = df2, by = NULL)
?merge
merge(x = df1, y = df2, by = "CustomerId", all.y = TRUE)
str(iris)
order(iris$Sepal.Length, decreasing = TRUE)
iris[132]
class(iris)
pp = iris[order(iris$Sepal.Length, decreasing = TRUE),]
pp
class(pp)
str(iris)
order(iris$Sepal.Length, decreasing = TRUE)
oo = order(iris$Sepal.Length, decreasing = TRUE)
class(oo)
?rder
?order
pp
ifelse(iris$Species %in% c("setosa"), "IsSetosa","Notsetosa")
iris$Species_new
iris$Species_new <- ifelse(iris$Species %in%
iris$Species_new <- ifelse(iris$Species %in% c("setosa"), "IsSetosa","Notsetosa")       #ifelse(判斷條件, true,false)
exit
iris$Species_new <- ifelse(iris$Species %in% c("setosa"), "IsSetosa","Notsetosa")
iris$Species_new
iris
plot(Cars93$Horsepower, Cars93$Price,
main="1993年美國汽車價格與馬力散布圖",
xlab="馬力",
ylab="價格",
sub="資料來源:Lock, R. H. (1993) 1993 New Car Data. Journal of Statistics Eduation 1(1).",
col="blue",
pch=16)
plot(Cars93$Horsepower, Cars93$Price,
main="1993年美國汽車價格與馬力散布圖",
xlab="馬力",
ylab="價格",
sub="資料來源:Lock, R. H. (1993) 1993 New Car Data. Journal of Statistics Eduation 1(1).",
col="blue",
pch=16)
install.packages("ggplot2")
install.packages("ggplot2")
